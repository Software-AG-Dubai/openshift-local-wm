apiVersion: v1
kind: Service
metadata:
  name: poc-wm-msr
  namespace: webmethods
spec:
  ports:
    - port: 5555
      targetPort: 5555
      protocol: TCP
  selector:
    app: poc-wm-msr
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-wm-msr
  namespace: webmethods
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poc-wm-msr
  template:
    metadata:
      labels:
        app: poc-wm-msr
    spec:
      containers:
        - name: poc-wm-msr
          image: default-route-openshift-image-registry.apps-crc.testing/webmethods/webmethods-microservicesruntime:11.1.0.0
          ports:
            - containerPort: 5555
          env:
            - name: SAG_IS_HEALTH_ENDPOINT_ACL
              value: 'Anonymous'
          resources:
            limits:
              memory: "1Gi"
              # cpu: "2"
---
apiVersion: v1
kind: Service
metadata:
  name: poc-wm-apigw-es
  namespace: webmethods
spec:
  ports:
    - port: 9200
      targetPort: 9200
      protocol: TCP
  selector:
    app: poc-wm-apigw-es
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-wm-apigw-es
  namespace: webmethods
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poc-wm-apigw-es
  template:
    metadata:
      labels:
        app: poc-wm-apigw-es
    spec:
      containers:
        - name: poc-wm-apigw-es
          image: default-route-openshift-image-registry.apps-crc.testing/webmethods/elasticsearch:8.2.3
          ports:
            - containerPort: 9200
          env:
            - name: discovery.type
              value: 'single-node'
            - name: xpack.security.enabled
              value: 'false'
            # - name: ES_JAVA_OPTS
            #   value: '-Xms2g -Xmx2g'
            - name: READINESS_PROBE_TIMEOUT
              value: '30'
            - name: READINESS_PROBE_PROTOCOL
              value: 'http'
          resources:
            limits:
              memory: "1Gi"
              # cpu: "2"
---
apiVersion: v1
kind: Service
metadata:
  name: poc-wm-apigw
  namespace: webmethods
spec:
  ports:
    - name: port-5555
      port: 5555
      targetPort: 5555
      protocol: TCP
    - name: port-9072
      port: 9072
      targetPort: 9072
      protocol: TCP
  selector:
    app: poc-wm-apigw
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gw-api-sa
  namespace: webmethods
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gw-api-sa-anyuid-binding
  namespace: webmethods
subjects:
  - kind: ServiceAccount
    name: gw-api-sa
    namespace: webmethods
roleRef:
  kind: ClusterRole
  name: anyuid
  apiGroup: rbac.authorization.k8s.io
---
# apiVersion: v1 # For non ocp envs
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: custom-privileged-scc
allowPrivilegedContainer: true
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny 
users:
  - system:serviceaccount:webmethods:gw-api-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-wm-apigw
  namespace: webmethods
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poc-wm-apigw
  template:
    metadata:
      labels:
        app: poc-wm-apigw
    spec:
      serviceAccountName: gw-api-sa
      securityContext:
      containers:
        - securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
          name: poc-wm-apigw
          image: default-route-openshift-image-registry.apps-crc.testing/webmethods/api-gateway:11.1
          ports:
            - containerPort: 5555
            - containerPort: 9072
          env:
            - name: SAG_IS_HEALTH_ENDPOINT_ACL
              value: 'Anonymous'
            - name: apigw_elasticsearch_hosts
              value: 'poc-wm-apigw-es:9200'
          # volumeMounts:
          #   - mountPath: '/opt/softwareag/IntegrationServer/instances/default/config/licenseKey.xml'
          #     name: license
          resources:
            limits:
              memory: "3Gi"
              # cpu: "2"
      # volumes:
      #   - name: license
      #     configMap:
      #       name: license-xml